/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  'use strict';\r\n\r\n  const checkboxNumber = document.querySelector('#numbers');\r\n  const checkboxSymbol = document.querySelector('#symbols');\r\n  const inputPassword = document.querySelector('.password__input');\r\n  const counter = document.querySelector('.range-label span');\r\n  const range = document.querySelector('#range');\r\n  const button = document.querySelector('.settings__btn');\r\n\r\n  const numbers = '0123456789';\r\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\r\n  const symbols = ' !@#$%^&*()_-+={}[];:|.,?/~`\\'';\r\n\r\n  const random = str => \r\n    str[Math.floor(Math.random() * str.length)];\r\n\r\n  range.oninput = () => counter.textContent = range.value;\r\n\r\n  button.addEventListener('click', () => {\r\n    let password = [];\r\n\r\n    for (let index = 0; index < +range.value; index++) {\r\n      password.push(random(letters));\r\n      password.push(random(letters.toUpperCase()));\r\n\r\n      if (checkboxNumber.checked) {\r\n        password.push(random(numbers));\r\n      }\r\n\r\n      if (checkboxSymbol.checked) {\r\n        password.push(random(symbols));\r\n      }\r\n    }\r\n\r\n    inputPassword.classList.add('click');\r\n\r\n    const result = password.slice(0, +range.value);\r\n\r\n    const mixPassword = () => Math.random() - 0.5;\r\n\r\n    return inputPassword.value = result.sort(mixPassword).join('');\r\n  });\r\n\r\n  inputPassword.addEventListener('click', () => {\r\n    const showCoppyed = document.querySelector('.password__hover');\r\n\r\n    if (inputPassword.value.length > 1) {\r\n      navigator.clipboard.writeText(inputPassword.value);\r\n\r\n      showCoppyed.classList.add('active');\r\n      setTimeout(() => showCoppyed.classList.remove('active'), 680);\r\n    }\r\n  });\r\n});\n\n//# sourceURL=webpack://gulp22/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;